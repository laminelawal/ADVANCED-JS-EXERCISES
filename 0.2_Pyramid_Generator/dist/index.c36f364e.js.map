{"mappings":"AAAA,MAAM,SAAS,SAAS,aAAa,CAAC;AACtC,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,KAAK,KAAK,CAAC,eAAe,GAAG;AAC7B,QAAQ,GAAG,CAAC;AACZ,IAAI,YAAY;AAChB,IAAI,QAAQ;AACZ,IAAI,OAAO,EAAE;AAEb,0CAA0C;AAE1C,IAAK,IAAI,IAAI,GAAG,KAAK,OAAO,IAC1B,2DAA2D;AAC3D,KAAK,IAAI,CACP,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,QAAQ;AAI7E,6EAA6E;AAC7E,qBAAqB;AAErB,4BAA4B;AAC5B,mCAAmC;AACnC,IAAI;AAEJ,KAAK,OAAO,CAAC,CAAC;IACZ,IAAI,IAAI,SAAS,aAAa,CAAC;IAE/B,EAAE,KAAK,CAAC,KAAK,GAAG;IAChB,EAAE,KAAK,CAAC,OAAO,GAAG;IAClB,EAAE,MAAM,CAAC;IAET,OAAO,WAAW,CAAC;AACrB;AAEA,QAAQ,GAAG,CAAC,WAAW,OAAO,QAAQ,MAAM,WAAW","sources":["index.js"],"sourcesContent":["const result = document.querySelector(\".result\");\nconst body = document.querySelector(\"body\");\nbody.style.backgroundColor = \"black\";\nconsole.log(body);\nlet character = \"#\";\nlet count = 8;\nlet rows = [];\n\n// function padRow(rowNumber, rowCount) {}\n\nfor (let i = 1; i <= count; i++) {\n  //To invert the tree you can use unshift by replacing push.\n  rows.push(\n    \".\".repeat(count - i) + character.repeat(2 * i - 1) + \".\".repeat(count - i)\n  );\n}\n\n//Before u print the value in your HTML div check it in the console while you\n// are working on it.\n\n// for (const row of rows) {\n//   result = restest + \"\\n\" + row;\n// }\n\nrows.forEach((e) => {\n  let p = document.createElement(\"p\");\n\n  p.style.color = \"darkblue\";\n  p.style.padding = \"0 20px\";\n  p.append(e);\n\n  result.appendChild(p);\n});\n\nconsole.log(character, count, \"ROWS\", rows, \"RESTEST\", result);\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}